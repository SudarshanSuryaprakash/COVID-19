{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xc","md","cx","card","infected","Typography","color","gutterBottom","variant","start","end","value","duration","seperator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","error","log","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","fetchAPI","lineChart","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","setCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.042bfb41.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport styles from './Cards.module.css';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  if (!confirmed) {\n    return 'Loading...';\n  }\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify='center'>\n        <Grid\n          item\n          component={Card}\n          xc={12}\n          md={3}\n          className={cx(styles.card, styles.infected)}\n        >\n          <Typography color='textSecondary' gutterBottom>\n            Infected\n          </Typography>\n          <Typography variant='h5'>\n            <CountUp\n              start={0}\n              end={confirmed.value}\n              duration={2.5}\n              seperator=','\n            />\n          </Typography>\n          <Typography color='textSecondary'>\n            {new Date(lastUpdate).toDateString()}\n          </Typography>\n          <Typography variant='body2'>\n            Number of active cases of COVID-19\n          </Typography>\n        </Grid>\n        <Grid\n          item\n          component={Card}\n          xc={12}\n          md={3}\n          className={cx(styles.card, styles.recovered)}\n        >\n          <Typography color='textSecondary' gutterBottom>\n            Recovered\n          </Typography>\n          <Typography variant='h5'>\n            <CountUp\n              start={0}\n              end={recovered.value}\n              duration={2.5}\n              seperator=','\n            />\n          </Typography>\n          <Typography color='textSecondary'>\n            {new Date(lastUpdate).toDateString()}\n          </Typography>\n          <Typography variant='body2'>\n            Number of recovered cases of COVID-19\n          </Typography>\n        </Grid>\n        <Grid\n          item\n          component={Card}\n          xc={12}\n          md={3}\n          className={cx(styles.card, styles.deaths)}\n        >\n          <Typography color='textSecondary' gutterBottom>\n            Deaths\n          </Typography>\n          <Typography variant='h5'>\n            <CountUp\n              start={0}\n              end={deaths.value}\n              duration={2.5}\n              seperator=','\n            />\n          </Typography>\n          <Typography color='textSecondary'>\n            {new Date(lastUpdate).toDateString()}\n          </Typography>\n          <Typography variant='body2'>\n            Number of deaths due to COVID-19\n          </Typography>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\nexport default Cards;\n","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n  let changeableUrl = url;\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n  try {\n    const {\n      data: { confirmed, recovered, deaths, lastUpdate },\n    } = await axios.get(changeableUrl);\n\n    return {\n      confirmed,\n      recovered,\n      deaths,\n      lastUpdate,\n    };\n  } catch (error) {\n    console.error(error);\n    console.log(error);\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({\n      confirmed: confirmed.total,\n      deaths: deaths.total,\n      date,\n    }));\n  } catch (error) {}\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const {\n      data: { countries },\n    } = await axios.get(`${url}/countries`);\n\n    return countries.map((country) => country.name);\n  } catch (error) {\n    return error;\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n  const [dailyData, setDailyData] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  }, []);\n\n  const lineChart = dailyData[0] ? (\n    <Line\n      data={{\n        labels: dailyData.map(({ date }) => date),\n        datasets: [\n          {\n            data: dailyData.map((data) => data.confirmed),\n            label: 'Infected',\n            borderColor: '#3333ff',\n            fill: true,\n          },\n          {\n            data: dailyData.map((data) => data.deaths),\n            label: 'Deaths',\n            borderColor: 'red',\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\n            fill: true,\n          },\n        ],\n      }}\n    />\n  ) : null;\n\n  const barChart = confirmed ? (\n    <Bar\n      data={{\n        labels: ['Infected', 'Recovered', 'Deaths'],\n        datasets: [\n          {\n            label: 'People',\n            backgroundColor: [\n              'rgba(0, 0, 255, 0.5)',\n              'rgba(0, 255, 0, 0.5)',\n              'rgba(255, 0, 0, 0.5)',\n            ],\n            data: [confirmed.value, recovered.value, deaths.value],\n          },\n        ],\n      }}\n      options={{\n        legend: { display: false },\n        title: { display: true, text: `Current state in ${country}` },\n      }}\n    />\n  ) : null;\n\n  return (\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\n  );\n};\nexport default Chart;\n","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\nimport { fetchCountries } from '../../api';\n\nimport styles from './CountryPicker.module.css';\n\nconst CountryPicker = ({ handleCountryChange }) => {\n  const [countries, setCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setCountries(await fetchCountries());\n    };\n\n    fetchAPI();\n  }, []);\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect\n        defaultValue=''\n        onChange={(e) => handleCountryChange(e.target.value)}\n      >\n        <option value=''>Global</option>\n        {countries.map((country, i) => (\n          <option key={i} value={country}>\n            {country}\n          </option>\n        ))}\n      </NativeSelect>\n    </FormControl>\n  );\n};\nexport default CountryPicker;\n","import React from 'react';\n// import Cards from './components/Cards/Cards'\n// import Chart from './components/Chart/Chart'\n// import CountryPicker from './components/CountryPicker/CountryPicker'\n\nimport { Cards, Chart, CountryPicker } from './components';\nimport styles from './App.module.css';\nimport { fetchData } from './api';\nimport coronaImage from './images/image.png';\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: '',\n  };\n\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n    this.setState({ data: fetchedData });\n  }\n\n  handleCountryChange = async (country) => {\n    const fetchedData = await fetchData(country);\n    this.setState({ data: fetchedData, country: country });\n  };\n\n  render() {\n    const { data, country } = this.state;\n    return (\n      <div className={styles.container}>\n        <img className={styles.image} src={coronaImage} /> Sudarshan\n        Suryaprakash\n        <Cards data={data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Chart data={data} country={country} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}